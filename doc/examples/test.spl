(*(fn f => fn x => if (f (f x)) then 1 else 0) (fn b => not b) true*)

(* using polymorphic types *)
(*let mp = rec map =>
  fn f => fn l =>
    if l=nil
    then nil
    else (f (hd l))::(map f (tl l))
in mp (fn p => ((fst p)+1,(snd p)+1)) ((1,2)::(3,4)::nil)
end*)

(fn x => x=(1::2::3::nil)) (1::2::3::nil)